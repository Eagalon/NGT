// AngelScript 2.37.0 WIP
// Lib options  AS_64BIT_PTR AS_WIN AS_X64_MSVC 
// Engine properties
const int EP_0 = 0;
const int EP_1 = 0;
const int EP_2 = 1;
const int EP_3 = 1;
const int EP_4 = 0;
const int EP_5 = 0;
const int EP_6 = 1;
const int EP_7 = 0;
const int EP_8 = 0;
const int EP_9 = 1;
const int EP_10 = 0;
const int EP_11 = 1;
const int EP_12 = 0;
const int EP_13 = 0;
const int EP_14 = 3;
const int EP_15 = 0;
const int EP_16 = 1;
const int EP_17 = 0;
const int EP_18 = 0;
const int EP_19 = 1;
const int EP_20 = 0;
const int EP_21 = 0;
const int EP_22 = 0;
const int EP_23 = 0;
const int EP_24 = 0;
const int EP_25 = 0;
const int EP_26 = 1;
const int EP_27 = 100;
const int EP_28 = 1;
const int EP_29 = 4096;
const int EP_30 = 10;
const int EP_31 = 0;
const int EP_32 = 0;
const int EP_33 = 0;
const int EP_34 = 0;
const int EP_35 = 1;
const int EP_36 = 0;
const int EP_37 = 0;

// Enums

// Types
access ffffffff
class string;    // 7938
class array<T>;    // 69
class dictionaryValue;    // 6022
class dictionary;    // 5
class datetime;    // 6922
class file;    // 1
class filesystem;    // 1
class ref;    // 8070
class any;    // 5
class ptr;    // 10
class rect;    // 262145
class vector;    // 1
class pack;    // 262145
class mixer;    // 262145
class sound;    // 1
class audio_recorder;    // 262145
class audio_encoder;    // 262145
class tts_voice;    // 1
class user_idle;    // 1
class timer;    // 1
class script_function;    // 1
class library;    // 1
class thread;    // 1
class instance;    // 1
class network_event;    // 1
class network;    // 1
class sqlite3statement;    // 1
class sqlite3;    // 1
typedef long int64;
typedef ulong uint64;
typedef short int8;
typedef ushort uint8;
typedef dword uint64;
typedef word uint8;
typedef size_t uint64;
typedef c_str int8;
typedef hwnd uint8;
typedef surface int64;
typedef keycode int;
funcdef bool array<T>::less(const T&in, const T&in);
funcdef void coroutine(dictionary@);
funcdef int exit_callback();
funcdef void sound_end_callback(const ?&in = null);
funcdef void thread_func();
funcdef int sqlite3authorizer(string, int, string, string, string, string);

// Template type members
obj_beh array<T> 3 array<T>@ array(int&in);
obj_beh array<T> 3 array<T>@ array(int&in, uint);
obj_beh array<T> 3 array<T>@ array(int&in, uint, const T&in);
objbeh "array<T>" 5 "void $beh5()"
objbeh "array<T>" 6 "void $beh6()"
objbeh "array<T>" 9 "int $beh9()"
objbeh "array<T>" 10 "void $beh10()"
objbeh "array<T>" 11 "bool $beh11()"
objbeh "array<T>" 12 "void $beh12(int&in)"
objbeh "array<T>" 13 "void $beh13(int&in)"
objbeh "array<T>" 8 "bool $beh8(int&in, bool&out)"
objbeh "array<T>" 4 "array<T>@ $list(int&in, int&in) { repeat T }"
objmthd "array<T>" "T& opIndex(uint)"
objmthd "array<T>" "const T& opIndex(uint) const"
objmthd "array<T>" "array<T>& opAssign(const array<T>&in)"
objmthd "array<T>" "void insert_at(uint, const T&in)"
objmthd "array<T>" "void insert_at(uint, const array<T>&inout)"
objmthd "array<T>" "void insert_last(const T&in)"
objmthd "array<T>" "void remove_at(uint)"
objmthd "array<T>" "void remove_last()"
objmthd "array<T>" "void remove_range(uint, uint)"
objmthd "array<T>" "uint length() const"
objmthd "array<T>" "void reserve(uint)"
objmthd "array<T>" "void resize(uint)"
objmthd "array<T>" "void sort_asc()"
objmthd "array<T>" "void sort_asc(uint, uint)"
objmthd "array<T>" "void sort_desc()"
objmthd "array<T>" "void sort_desc(uint, uint)"
objmthd "array<T>" "void reverse()"
objmthd "array<T>" "int find(const T&in) const"
objmthd "array<T>" "int find(uint, const T&in) const"
objmthd "array<T>" "int find_by_ref(const T&in) const"
objmthd "array<T>" "int find_by_ref(uint, const T&in) const"
objmthd "array<T>" "bool op_equals(const array<T>&in) const"
objmthd "array<T>" "bool is_empty() const"
objmthd "array<T>" "void sort(array<T>::less&in, uint = 0, uint = uint ( - 1 ))"

// Type members
objbeh "string" 2 "void string()"
obj_beh "string" 0 "void string()"
obj_beh "string" 0 "void string(const string&in)"
objmthd "string" "string& opAssign(const string&in)"
objmthd "string" "string& opAddAssign(const string&in)"
objmthd "string" "bool opEquals(const string&in) const"
objmthd "string" "int opCmp(const string&in) const"
objmthd "string" "string opAdd(const string&in) const"
objmthd "string" "uint length() const"
objmthd "string" "void resize(uint)"
objmthd "string" "bool is_empty() const"
objmthd "string" "string opIndex(uint)"
objmthd "string" "const string opIndex(uint) const"
objmthd "string" "string& opAssign(double)"
objmthd "string" "string& opAddAssign(double)"
objmthd "string" "string opAdd(double) const"
objmthd "string" "string opAdd_r(double) const"
objmthd "string" "string& opAssign(float)"
objmthd "string" "string& opAddAssign(float)"
objmthd "string" "string opAdd(float) const"
objmthd "string" "string opAdd_r(float) const"
objmthd "string" "string& opAssign(int64)"
objmthd "string" "string& opAddAssign(int64)"
objmthd "string" "string opAdd(int64) const"
objmthd "string" "string opAdd_r(int64) const"
objmthd "string" "string& opAssign(uint64)"
objmthd "string" "string& opAddAssign(uint64)"
objmthd "string" "string opAdd(uint64) const"
objmthd "string" "string opAdd_r(uint64) const"
objmthd "string" "string& opAssign(bool)"
objmthd "string" "string& opAddAssign(bool)"
objmthd "string" "string opAdd(bool) const"
objmthd "string" "string opAdd_r(bool) const"
objmthd "string" "string substr(uint = 0, int = - 1) const"
objmthd "string" "int find_first(const string&in, uint = 0) const"
objmthd "string" "int find_first_of(const string&in, uint = 0) const"
objmthd "string" "int find_first_not_of(const string&in, uint = 0) const"
objmthd "string" "int find_last(const string&in, int = - 1) const"
objmthd "string" "int find_last_of(const string&in, int = - 1) const"
objmthd "string" "int find_last_not_of(const string&in, int = - 1) const"
objmthd "string" "void insert(uint, const string&in)"
objmthd "string" "void erase(uint, int = - 1)"
objmthd "string" "array<string>@ split(const string&in) const"
objmthd "string" "string replace(const string&in, const string&in) const"
objmthd "string" "string capitalize() const"
objmthd "string" "string upper() const"
objmthd "string" "string lower() const"
objmthd "string" "array<string>@ split_lines() const"
objmthd "string" "bool ends_with(const string&in) const"
objmthd "string" "bool starts_with(const string&in) const"
objmthd "string" "bool contains(const string&in) const"
objmthd "string" "bool is_upper() const"
objmthd "string" "bool is_lower() const"
objbeh "dictionaryValue" 2 "void dictionaryValue()"
objbeh "dictionaryValue" 12 "void $beh12(int&in)"
objbeh "dictionaryValue" 13 "void $beh13(int&in)"
obj_beh "dictionaryValue" 0 "void dictionaryValue()"
objmthd "dictionaryValue" "dictionaryValue& opAssign(const dictionaryValue&in)"
objmthd "dictionaryValue" "dictionaryValue& opHndlAssign(const ?&in)"
objmthd "dictionaryValue" "dictionaryValue& opHndlAssign(const dictionaryValue&in)"
objmthd "dictionaryValue" "dictionaryValue& opAssign(const ?&in)"
objmthd "dictionaryValue" "dictionaryValue& opAssign(double)"
objmthd "dictionaryValue" "dictionaryValue& opAssign(int64)"
objmthd "dictionaryValue" "void opCast(?&out)"
objmthd "dictionaryValue" "void opConv(?&out)"
objmthd "dictionaryValue" "int64 opConv()"
objmthd "dictionaryValue" "double opConv()"
obj_beh dictionary 3 dictionary@ dictionary();
objbeh "dictionary" 5 "void $beh5()"
objbeh "dictionary" 6 "void $beh6()"
objbeh "dictionary" 9 "int $beh9()"
objbeh "dictionary" 10 "void $beh10()"
objbeh "dictionary" 11 "bool $beh11()"
objbeh "dictionary" 12 "void $beh12(int&in)"
objbeh "dictionary" 13 "void $beh13(int&in)"
objbeh "dictionary" 4 "dictionary@ $list(int&in) { repeat { string, ? } }"
objmthd "dictionary" "dictionary& opAssign(const dictionary&in)"
objmthd "dictionary" "void set(const string&in, const ?&in)"
objmthd "dictionary" "bool get(const string&in, ?&out) const"
objmthd "dictionary" "void set(const string&in, const int64&in)"
objmthd "dictionary" "bool get(const string&in, int64&out) const"
objmthd "dictionary" "void set(const string&in, const double&in)"
objmthd "dictionary" "bool get(const string&in, double&out) const"
objmthd "dictionary" "bool exists(const string&in) const"
objmthd "dictionary" "bool is_empty() const"
objmthd "dictionary" "uint get_size() const"
objmthd "dictionary" "bool delete(const string&in)"
objmthd "dictionary" "void delete_all()"
objmthd "dictionary" "array<string>@ get_keys() const"
objmthd "dictionary" "dictionaryValue& opIndex(const string&in)"
objmthd "dictionary" "const dictionaryValue& opIndex(const string&in) const"
obj_beh "datetime" 0 "void datetime()"
obj_beh "datetime" 0 "void datetime(const datetime&in)"
obj_beh "datetime" 0 "void datetime(uint, uint, uint, uint = 0, uint = 0, uint = 0)"
objmthd "datetime" "datetime& opAssign(const datetime&in)"
objmthd "datetime" "uint get_year() const property"
objmthd "datetime" "uint get_month() const property"
objmthd "datetime" "uint get_day() const property"
objmthd "datetime" "uint get_hour() const property"
objmthd "datetime" "uint get_minute() const property"
objmthd "datetime" "uint get_second() const property"
objmthd "datetime" "bool setDate(uint, uint, uint)"
objmthd "datetime" "bool setTime(uint, uint, uint)"
objmthd "datetime" "int64 opSub(const datetime&in) const"
objmthd "datetime" "datetime opAdd(int64) const"
objmthd "datetime" "datetime opAdd_r(int64) const"
objmthd "datetime" "datetime& opAddAssign(int64)"
objmthd "datetime" "datetime opSub(int64) const"
objmthd "datetime" "datetime opSub_r(int64) const"
objmthd "datetime" "datetime& opSubAssign(int64)"
objmthd "datetime" "bool opEquals(const datetime&in) const"
objmthd "datetime" "int opCmp(const datetime&in) const"
obj_beh file 3 file@ file();
objbeh "file" 5 "void $beh5()"
objbeh "file" 6 "void $beh6()"
objmthd "file" "int open(const string&in, const string&in)"
objmthd "file" "int close()"
objmthd "file" "int get_size() const property"
objmthd "file" "bool is_end_of_file() const"
objmthd "file" "string read(uint)"
objmthd "file" "string read_line()"
objmthd "file" "int write(const string&in)"
objmthd "file" "int get_pos() const property"
objmthd "file" "int set_pos(int)"
objmthd "file" "int move_pos(int)"
objprop "file" "bool most_significant_byte_first" 0 0
obj_beh filesystem 3 filesystem@ filesystem();
objbeh "filesystem" 5 "void $beh5()"
objbeh "filesystem" 6 "void $beh6()"
objmthd "filesystem" "bool file_exists(const string&in)"
objmthd "filesystem" "bool dir_exists(const string&in)"
objmthd "filesystem" "bool change_current_path(const string&in)"
objmthd "filesystem" "string get_current_path() const property"
objmthd "filesystem" "array<string>@ get_dirs() const property"
objmthd "filesystem" "array<string>@ get_files(string = \"*\") const"
objmthd "filesystem" "bool is_dir(const string&in) const"
objmthd "filesystem" "bool is_link(const string&in) const"
objmthd "filesystem" "int64 get_size(const string&in) const"
objmthd "filesystem" "int make_dir(const string&in)"
objmthd "filesystem" "int remove_dir(const string&in)"
objmthd "filesystem" "int delete_file(const string&in)"
objmthd "filesystem" "int copy_file(const string&in, const string&in)"
objmthd "filesystem" "int move(const string&in, const string&in)"
objmthd "filesystem" "datetime get_create_date_time(const string&in) const"
objmthd "filesystem" "datetime get_modify_date_time(const string&in) const"
objbeh "ref" 2 "void ref()"
objbeh "ref" 12 "void $beh12(int&in)"
objbeh "ref" 13 "void $beh13(int&in)"
obj_beh "ref" 0 "void ref()"
obj_beh "ref" 0 "void ref(const ref&in)"
obj_beh "ref" 0 "void ref(const ?&in)"
objmthd "ref" "void opCast(?&out)"
objmthd "ref" "ref& opHndlAssign(const ref&in)"
objmthd "ref" "ref& opHndlAssign(const ?&in)"
objmthd "ref" "bool opEquals(const ref&in) const"
objmthd "ref" "bool opEquals(const ?&in) const"
obj_beh any 3 any@ any();
obj_beh any 3 any@ any(?&in);
obj_beh any 3 any@ any(const int64&in);
obj_beh any 3 any@ any(const double&in);
objbeh "any" 5 "void $beh5()"
objbeh "any" 6 "void $beh6()"
objbeh "any" 9 "int $beh9()"
objbeh "any" 10 "void $beh10()"
objbeh "any" 11 "bool $beh11()"
objbeh "any" 12 "void $beh12(int&in)"
objbeh "any" 13 "void $beh13(int&in)"
objmthd "any" "any& opAssign(any&in)"
objmthd "any" "void store(?&in)"
objmthd "any" "void store(const int64&in)"
objmthd "any" "void store(const double&in)"
objmthd "any" "bool retrieve(?&out)"
objmthd "any" "bool retrieve(int64&out)"
objmthd "any" "bool retrieve(double&out)"
obj_beh rect 3 rect@ rect();
objprop "rect" "int x" 0 0
objprop "rect" "int y" 0 0
objprop "rect" "int h" 0 0
objprop "rect" "int w" 0 0
obj_beh vector 3 vector@ vector();
objbeh "vector" 5 "void $beh5()"
objbeh "vector" 6 "void $beh6()"
objmthd "vector" "float get_length() const property"
objmthd "vector" "vector& opAssign(const vector&in)"
objprop "vector" "float x" 0 0
objprop "vector" "float y" 0 0
objprop "vector" "float z" 0 0
obj_beh pack 3 pack@ pack();
objmthd "pack" "bool open(const string&in, int) const"
objmthd "pack" "void close() const"
objmthd "pack" "bool file_exists(const string&in) const"
objmthd "pack" "void extract_file(const string&in, const string&in) const"
objmthd "pack" "array<string>@ list_files() const"
objmthd "pack" "void add_file(const string&in, const string&in) const"
objmthd "pack" "string get_file(const string&in) const"
objmthd "pack" "int get_file_count() const property"
obj_beh mixer 3 mixer@ mixer();
obj_beh sound 3 sound@ sound(const string&in = \"\", bool = false);
objbeh "sound" 5 "void $beh5()"
objbeh "sound" 6 "void $beh6()"
objmthd "sound" "bool load(const string&in, bool = false, sound_end_callback@ = null) const"
objmthd "sound" "bool load_from_memory(const string&in, bool = false) const"
objmthd "sound" "bool stream(const string&in, bool = false) const"
objmthd "sound" "bool load_url(const string&in, bool = false) const"
objmthd "sound" "string push_memory() const"
objmthd "sound" "void set_faid_time(float, float, float) const"
objmthd "sound" "bool play() const"
objmthd "sound" "bool play_looped() const"
objmthd "sound" "bool pause() const"
objmthd "sound" "bool play_wait() const"
objmthd "sound" "bool stop() const"
objmthd "sound" "bool close() const"
objmthd "sound" "void set_fx(const string&in, int = 0) const"
objmthd "sound" "void delete_fx(const string&in, int = 0) const"
objmthd "sound" "void set_reverb_parameters(float, float, float, float, float) const"
objmthd "sound" "void set_delay_parameters(float, float, float) const"
objmthd "sound" "void set_position(float, float, float, float, float, float, double = 0.0, float = 5, float = 0.6, float = 0, float = 0, float = 0, float = 0) const"
objmthd "sound" "void set_position(const vector@ = null, const vector@ = null) const"
objmthd "sound" "void set_hrtf(bool = true) const property"
objmthd "sound" "bool get_hrtf() const property"
objmthd "sound" "void set_volume_step(float) const property"
objmthd "sound" "void set_pan_step(float) const property"
objmthd "sound" "void set_pitch_step(float) const property"
objmthd "sound" "bool seek(float) const"
objmthd "sound" "bool get_looping() const property"
objmthd "sound" "void set_looping(bool) const property"
objmthd "sound" "float get_pan() const property"
objmthd "sound" "void set_pan(float) const property"
objmthd "sound" "float get_volume() const property"
objmthd "sound" "void set_volume(float) const property"
objmthd "sound" "float get_pitch() const property"
objmthd "sound" "void set_pitch(float) const property"
objmthd "sound" "float get_speed() const property"
objmthd "sound" "void set_speed(float) const property"
objmthd "sound" "bool get_active() const property"
objmthd "sound" "bool get_playing() const property"
objmthd "sound" "bool get_paused() const property"
objmthd "sound" "float get_position() const property"
objmthd "sound" "float get_length() const property"
objmthd "sound" "void set_length(float = 0.0) const property"
objmthd "sound" "float get_sample_rate() const property"
obj_beh audio_recorder 3 audio_recorder@ audio_recorder();
objmthd "audio_recorder" "void start() const"
objmthd "audio_recorder" "void stop() const"
objmthd "audio_recorder" "string get_data() const property"
obj_beh audio_encoder 3 audio_encoder@ audio_encoder();
objmthd "audio_encoder" "void encode(const string&in) const"
objmthd "audio_encoder" "string get_data() const property"
obj_beh tts_voice 3 tts_voice@ tts_voice();
objbeh "tts_voice" 5 "void $beh5()"
objbeh "tts_voice" 6 "void $beh6()"
objmthd "tts_voice" "void speak(const string&in) const"
objmthd "tts_voice" "void speak_wait(const string&in) const"
objmthd "tts_voice" "void speak_interrupt(const string&in) const"
objmthd "tts_voice" "void speak_interrupt_wait(const string&in) const"
objmthd "tts_voice" "int get_rate() const property"
objmthd "tts_voice" "void set_rate(int) property"
obj_beh user_idle 3 user_idle@ user_idle();
objbeh "user_idle" 5 "void $beh5()"
objbeh "user_idle" 6 "void $beh6()"
objmthd "user_idle" "uint64 get_elapsed_millis() const property"
objmthd "user_idle" "uint64 get_elapsed_seconds() const property"
objmthd "user_idle" "uint64 get_elapsed_minutes() const property"
objmthd "user_idle" "uint64 get_elapsed_hours() const property"
objmthd "user_idle" "uint64 get_elapsed_days() const property"
objmthd "user_idle" "uint64 get_elapsed_weeks() const property"
obj_beh timer 3 timer@ timer();
objbeh "timer" 5 "void $beh5()"
objbeh "timer" 6 "void $beh6()"
objmthd "timer" "uint64 get_elapsed_seconds() const property"
objmthd "timer" "uint64 get_elapsed_minutes() const property"
objmthd "timer" "uint64 get_elapsed_hours() const property"
objmthd "timer" "uint64 get_elapsed_millis() const property"
objmthd "timer" "uint64 get_elapsed_micros() const property"
objmthd "timer" "uint64 get_elapsed_nanos() const property"
objmthd "timer" "void force_seconds(uint64) const"
objmthd "timer" "void force_minutes(uint64) const"
objmthd "timer" "void force_hours(uint64) const"
objmthd "timer" "void force_millis(uint64) const"
objmthd "timer" "void force_micros(uint64) const"
objmthd "timer" "void force_nanos(uint64) const"
objmthd "timer" "void restart() const"
objmthd "timer" "void pause() const"
objmthd "timer" "void resume() const"
objmthd "timer" "bool get_running() const property"
obj_beh script_function 3 script_function@ script_function();
objbeh "script_function" 5 "void $beh5()"
objbeh "script_function" 6 "void $beh6()"
obj_beh library 3 library@ library();
objbeh "library" 5 "void $beh5()"
objbeh "library" 6 "void $beh6()"
objmthd "library" "bool load(const string&in) const"
objmthd "library" "dictionary@ call(const string&in, ?&in = null, ?&in = null, ?&in = null, ?&in = null, ?&in = null, ?&in = null, ?&in = null, ?&in = null, ?&in = null, ?&in = null) const"
objmthd "library" "void unload() const"
obj_beh thread 3 thread@ thread(thread_func@);
objbeh "thread" 5 "void $beh5()"
objbeh "thread" 6 "void $beh6()"
objmthd "thread" "void detach() const"
objmthd "thread" "void join() const"
objmthd "thread" "void destroy() const"
obj_beh instance 3 instance@ instance(const string&in);
objbeh "instance" 5 "void $beh5()"
objbeh "instance" 6 "void $beh6()"
objmthd "instance" "bool is_running()"
obj_beh network_event 3 network_event@ network_event();
objbeh "network_event" 5 "void $beh5()"
objbeh "network_event" 6 "void $beh6()"
objmthd "network_event" "network_event& opAssign(const network_event&in)"
objprop "network_event" "const int type" 0 0
objprop "network_event" "const uint peer_id" 0 0
objprop "network_event" "const int channel" 0 0
objprop "network_event" "const string message" 0 0
obj_beh network 3 network@ network();
objbeh "network" 5 "void $beh5()"
objbeh "network" 6 "void $beh6()"
objmthd "network" "uint connect(string&in, int)"
objmthd "network" "bool destroy()"
objmthd "network" "bool disconnect_peer(uint)"
objmthd "network" "bool disconnect_peer_forcefully(uint)"
objmthd "network" "string get_peer_address(uint) const property"
objmthd "network" "double get_peer_average_round_trip_time(uint) const property"
objmthd "network" "array<uint>@ get_peer_list()"
objmthd "network" "network_event@ request(int = 0, int&out = void)"
objmthd "network" "bool send_reliable(uint, string&in, int)"
objmthd "network" "bool send_unreliable(uint, string&in, int)"
objmthd "network" "bool set_bandwidth_limits(double, double)"
objmthd "network" "bool setup_client(int, int)"
objmthd "network" "bool setup_server(int, int, int)"
objmthd "network" "void flush() const"
objmthd "network" "int get_connected_peers() const property"
objmthd "network" "double get_bytes_sent() const property"
objmthd "network" "double get_bytes_received() const property"
obj_beh sqlite3statement 3 sqlite3statement@ sqlite3statement();
objbeh "sqlite3statement" 5 "void $beh5()"
objbeh "sqlite3statement" 6 "void $beh6()"
objmthd "sqlite3statement" "int step()"
objmthd "sqlite3statement" "int reset()"
objmthd "sqlite3statement" "string get_expanded_sql_statement() property"
objmthd "sqlite3statement" "string get_sql_statement() property"
objmthd "sqlite3statement" "int get_bind_param_count() property"
objmthd "sqlite3statement" "int get_column_count() property"
objmthd "sqlite3statement" "int bind_blob(int, const string&in, bool = true)"
objmthd "sqlite3statement" "int bind_double(int, double)"
objmthd "sqlite3statement" "int bind_int(int, int)"
objmthd "sqlite3statement" "int bind_int64(int, int64)"
objmthd "sqlite3statement" "int bind_null(int)"
objmthd "sqlite3statement" "int bind_param_index(const string&in)"
objmthd "sqlite3statement" "string bind_param_name(int)"
objmthd "sqlite3statement" "int bind_text(int, const string&in, bool = true)"
objmthd "sqlite3statement" "int clear_bindings()"
objmthd "sqlite3statement" "string column_blob(int)"
objmthd "sqlite3statement" "int column_bytes(int)"
objmthd "sqlite3statement" "string column_decltype(int)"
objmthd "sqlite3statement" "double column_double(int)"
objmthd "sqlite3statement" "int column_int(int)"
objmthd "sqlite3statement" "int64 column_int64(int)"
objmthd "sqlite3statement" "string column_name(int)"
objmthd "sqlite3statement" "int column_type(int)"
objmthd "sqlite3statement" "string column_text(int)"
obj_beh sqlite3 3 sqlite3@ sqlite3();
objbeh "sqlite3" 5 "void $beh5()"
objbeh "sqlite3" 6 "void $beh6()"
objmthd "sqlite3" "int close()"
objmthd "sqlite3" "int open(const string&in, int = 6)"
objmthd "sqlite3" "sqlite3statement@ prepare(const string&in, int&out = void)"
objmthd "sqlite3" "int execute(const string&in)"
objmthd "sqlite3" "int64 get_rows_changed() property"
objmthd "sqlite3" "int64 get_total_rows_changed() property"
objmthd "sqlite3" "int limit(int, int)"
objmthd "sqlite3" "int set_authorizer(sqlite3authorizer@, const string&in = \"\")"
objmthd "sqlite3" "int64 get_last_insert_rowid() property"
objmthd "sqlite3" "void set_last_insert_rowid(int64) property"
objmthd "sqlite3" "int get_last_error()"
objmthd "sqlite3" "string get_last_error_text()"
objmthd "sqlite3" "bool get_active() property"

// Functions
func "string formatInt(int64, const string&in = \"\", uint = 0)"
func "string formatUInt(uint64, const string&in = \"\", uint = 0)"
func "string formatFloat(double, const string&in = \"\", uint = 0, uint = 0)"
func "double string_to_number(const string&in, uint&out = 0)"
func "string join(const array<string>&in, const string&in)"
func "void throw(const string&in)"
func "string get_exception_info()"
func "float fpFromIEEE(uint)"
func "uint fpToIEEE(float)"
func "double fpFromIEEE(uint64)"
func "uint64 fpToIEEE(double)"
func "bool closeTo(float, float, float = 0.00001f)"
func "bool closeTo(double, double, double = 0.0000000001)"
func "float cos(float)"
func "float sin(float)"
func "float tan(float)"
func "float acos(float)"
func "float asin(float)"
func "float atan(float)"
func "float atan2(float, float)"
func "float cosh(float)"
func "float sinh(float)"
func "float tanh(float)"
func "float log(float)"
func "float log10(float)"
func "float pow(float, float)"
func "float sqrt(float)"
func "float ceil(float)"
func "float abs(float)"
func "float floor(float)"
func "float fraction(float)"
func "double round(double, int)"
func "void sleep(uint)"
func "void yield()"
func "void create_coroutine(coroutine@, dictionary@)"
func "int get_cpu_count() property"
func "int get_system_ram() property"
func "string get_platform() property"
func "uint64 get_time_stamp_millis() property"
func "uint64 get_time_stamp_seconds() property"
func "void set_library_path(const string&in)"
func "int64 random(int64, int64)"
func "double random(double, double)"
func "bool random_bool()"
func "void printf(string&in, ?&in = 0, ?&in = 0, ?&in = 0, ?&in = 0, ?&in = 0, ?&in = 0, ?&in = 0, ?&in = 0, ?&in = 0, ?&in = 0, ?&in = 0, ?&in = 0, ?&in = 0, ?&in = 0, ?&in = 0)"
func "int get_last_error() property"
func "void set_screen_reader_interrupt(bool) property"
func "bool get_screen_reader_interrupt() property"
func "void speak(const string&in, bool = screen_reader_interrupt)"
func "void speak_wait(const string&in, bool = screen_reader_interrupt)"
func "void stop_speech()"
func "string screen_reader_detect()"
func "void set_exit_callback(exit_callback@ = null)"
func "void show_console()"
func "void hide_console()"
func "bool show_window(const string&in, int = 640, int = 480, bool = true)"
func "bool focus_window()"
func "void hide_window()"
func "void set_window_title(const string&in) property"
func "void set_window_closable(bool) property"
func "void garbage_collect()"
func "int64 get_window_surface() property"
func "void free_surface(int64)"
func "int64 load_bmp(const string&in)"
func "int fill_rect(int64, rect@, uint)"
func "int blit_surface(int64, rect@, int64, rect@)"
func "void update_window(bool = false)"
func "bool get_window_active() property"
func "void set_window_fullscreen(bool) property"
func "bool mouse_pressed(uint8)"
func "bool mouse_released(uint8)"
func "bool mouse_down(uint8)"
func "int get_MOUSE_X() property"
func "int get_MOUSE_Y() property"
func "int get_MOUSE_Z() property"
func "void ftp_download(const string&in, const string&in)"
func "void mail_send(const string&in, const string&in, const string&in, const string&in, const string&in, const string&in, const string&in, const string&in = \"\")"
func "void exit(int = 0)"
func "string number_to_words(uint64, bool)"
func "bool clipboard_copy_text(const string&in)"
func "string clipboard_read_text()"
func "string get_input()"
func "bool key_pressed(int)"
func "bool key_released(int)"
func "bool key_down(int)"
func "bool key_repeat(int)"
func "array<int>@ keys_pressed()"
func "array<int>@ keys_released()"
func "array<int>@ keys_down()"
func "array<int>@ keys_repeat()"
func "string key_to_string(int)"
func "int string_to_key(const string&in)"
func "bool force_key_down(int)"
func "bool force_key_up(int)"
func "void reset_all_forced_keys()"
func "string string_encrypt(string, string)"
func "string string_decrypt(string, string)"
func "string url_decode(const string&in)"
func "string url_encode(const string&in)"
func "string url_get(const string&in)"
func "string url_post(const string&in, const string&in)"
func "string ascii_to_character(int)"
func "int character_to_ascii(const string&in)"
func "string hex_to_string(const string&in)"
func "string number_to_hex_string(double)"
func "string string_base64_decode(const string&in)"
func "string string_base64_encode(const string&in)"
func "string string_base32_decode(const string&in)"
func "string string_base32_encode(const string&in)"
func "string string_to_hex(const string&in)"
func "bool alert(const string&in, const string&in, const string&in = \"OK\")"
func "int question(const string&in, const string&in)"
func "void wait(uint64)"
func "void delay(int)"
func "string read_environment_variable(const string&in)"
func "bool write_environment_variable(const string&in, const string&in)"
func "string serialize(dictionary@ = null)"
func "dictionary@ deserialize(const string&in)"
func "bool urlopen(const string&in)"
func "uint64 malloc(uint64)"
func "uint64 calloc(uint64, uint64)"
func "uint64 realloc(uint64, uint64)"
func "void free(uint64)"
func "void set_sound_storage(const string&in) property"
func "string get_sound_storage() property"
func "void set_master_volume(float) property"
func "float get_master_volume() property"
func "void mixer_start()"
func "void mixer_stop()"
func "bool mixer_play_sound(const string&in)"
func "void mixer_reinit()"
func "void set_sound_global_hrtf(bool) property"
func "bool get_sound_global_hrtf() property"
func "array<string>@ get_char_argv()"
func "int exec(const string&in)"
func "int exec(const string&in, string&out)"

// Properties
prop "mixer sound_default_mixer"
prop "const int EVENT_NONE"
prop "const int EVENT_CONNECT"
prop "const int EVENT_RECEIVE"
prop "const int EVENT_DISCONNECT"
prop "const int SDLK_UNKNOWN"
prop "const int SDLK_BACKSPACE"
prop "const int SDLK_TAB"
prop "const int SDLK_RETURN"
prop "const int SDLK_ESCAPE"
prop "const int SDLK_SPACE"
prop "const int SDLK_COMMA"
prop "const int SDLK_MINUS"
prop "const int SDLK_PERIOD"
prop "const int SDLK_SLASH"
prop "const int SDLK_0"
prop "const int SDLK_1"
prop "const int SDLK_2"
prop "const int SDLK_3"
prop "const int SDLK_4"
prop "const int SDLK_5"
prop "const int SDLK_6"
prop "const int SDLK_7"
prop "const int SDLK_8"
prop "const int SDLK_9"
prop "const int SDLK_SEMICOLON"
prop "const int SDLK_LEFTBRACKET"
prop "const int SDLK_RIGHTBRACKET"
prop "const int SDLK_BACKSLASH"
prop "const int SDLK_a"
prop "const int SDLK_b"
prop "const int SDLK_c"
prop "const int SDLK_d"
prop "const int SDLK_e"
prop "const int SDLK_f"
prop "const int SDLK_g"
prop "const int SDLK_h"
prop "const int SDLK_i"
prop "const int SDLK_j"
prop "const int SDLK_k"
prop "const int SDLK_l"
prop "const int SDLK_m"
prop "const int SDLK_n"
prop "const int SDLK_o"
prop "const int SDLK_p"
prop "const int SDLK_q"
prop "const int SDLK_r"
prop "const int SDLK_s"
prop "const int SDLK_t"
prop "const int SDLK_u"
prop "const int SDLK_v"
prop "const int SDLK_w"
prop "const int SDLK_x"
prop "const int SDLK_y"
prop "const int SDLK_z"
prop "const int SDLK_DELETE"
prop "const int SDLK_CAPSLOCK"
prop "const int SDLK_F1"
prop "const int SDLK_F2"
prop "const int SDLK_F3"
prop "const int SDLK_F4"
prop "const int SDLK_F5"
prop "const int SDLK_F6"
prop "const int SDLK_F7"
prop "const int SDLK_F8"
prop "const int SDLK_F9"
prop "const int SDLK_F10"
prop "const int SDLK_F11"
prop "const int SDLK_F12"
prop "const int SDLK_PRINTSCREEN"
prop "const int SDLK_SCROLLLOCK"
prop "const int SDLK_PAUSE"
prop "const int SDLK_INSERT"
prop "const int SDLK_HOME"
prop "const int SDLK_PAGEUP"
prop "const int SDLK_END"
prop "const int SDLK_PAGEDOWN"
prop "const int SDLK_RIGHT"
prop "const int SDLK_LEFT"
prop "const int SDLK_DOWN"
prop "const int SDLK_UP"
prop "const int SDLK_NUMLOCKCLEAR"
prop "const int SDLK_KP_DIVIDE"
prop "const int SDLK_KP_MULTIPLY"
prop "const int SDLK_KP_MINUS"
prop "const int SDLK_KP_PLUS"
prop "const int SDLK_KP_ENTER"
prop "const int SDLK_KP_1"
prop "const int SDLK_KP_2"
prop "const int SDLK_KP_3"
prop "const int SDLK_KP_4"
prop "const int SDLK_KP_5"
prop "const int SDLK_KP_6"
prop "const int SDLK_KP_7"
prop "const int SDLK_KP_8"
prop "const int SDLK_KP_9"
prop "const int SDLK_KP_0"
prop "const int SDLK_KP_PERIOD"
prop "const int SDLK_APPLICATION"
prop "const int SDLK_POWER"
prop "const int SDLK_KP_EQUALS"
prop "const int SDLK_F13"
prop "const int SDLK_F14"
prop "const int SDLK_F15"
prop "const int SDLK_F16"
prop "const int SDLK_F17"
prop "const int SDLK_F18"
prop "const int SDLK_F19"
prop "const int SDLK_F20"
prop "const int SDLK_F21"
prop "const int SDLK_F22"
prop "const int SDLK_F23"
prop "const int SDLK_F24"
prop "const int SDLK_EXECUTE"
prop "const int SDLK_HELP"
prop "const int SDLK_MENU"
prop "const int SDLK_SELECT"
prop "const int SDLK_STOP"
prop "const int SDLK_AGAIN"
prop "const int SDLK_UNDO"
prop "const int SDLK_CUT"
prop "const int SDLK_COPY"
prop "const int SDLK_PASTE"
prop "const int SDLK_FIND"
prop "const int SDLK_MUTE"
prop "const int SDLK_VOLUMEUP"
prop "const int SDLK_VOLUMEDOWN"
prop "const int SDLK_KP_COMMA"
prop "const int SDLK_KP_EQUALSAS400"
prop "const int SDLK_ALTERASE"
prop "const int SDLK_SYSREQ"
prop "const int SDLK_CANCEL"
prop "const int SDLK_CLEAR"
prop "const int SDLK_PRIOR"
prop "const int SDLK_RETURN2"
prop "const int SDLK_SEPARATOR"
prop "const int SDLK_OUT"
prop "const int SDLK_OPER"
prop "const int SDLK_CLEARAGAIN"
prop "const int SDLK_CRSEL"
prop "const int SDLK_EXSEL"
prop "const int SDLK_KP_00"
prop "const int SDLK_KP_000"
prop "const int SDLK_THOUSANDSSEPARATOR"
prop "const int SDLK_DECIMALSEPARATOR"
prop "const int SDLK_CURRENCYUNIT"
prop "const int SDLK_CURRENCYSUBUNIT"
prop "const int SDLK_KP_LEFTPAREN"
prop "const int SDLK_KP_RIGHTPAREN"
prop "const int SDLK_KP_LEFTBRACE"
prop "const int SDLK_KP_RIGHTBRACE"
prop "const int SDLK_KP_TAB"
prop "const int SDLK_KP_BACKSPACE"
prop "const int SDLK_KP_A"
prop "const int SDLK_KP_B"
prop "const int SDLK_KP_C"
prop "const int SDLK_KP_D"
prop "const int SDLK_KP_E"
prop "const int SDLK_KP_F"
prop "const int SDLK_KP_XOR"
prop "const int SDLK_KP_POWER"
prop "const int SDLK_KP_PERCENT"
prop "const int SDLK_KP_LESS"
prop "const int SDLK_KP_GREATER"
prop "const int SDLK_KP_AMPERSAND"
prop "const int SDLK_KP_DBLAMPERSAND"
prop "const int SDLK_KP_VERTICALBAR"
prop "const int SDLK_KP_DBLVERTICALBAR"
prop "const int SDLK_KP_COLON"
prop "const int SDLK_KP_HASH"
prop "const int SDLK_KP_SPACE"
prop "const int SDLK_KP_AT"
prop "const int SDLK_KP_EXCLAM"
prop "const int SDLK_KP_MEMSTORE"
prop "const int SDLK_KP_MEMRECALL"
prop "const int SDLK_KP_MEMCLEAR"
prop "const int SDLK_KP_MEMADD"
prop "const int SDLK_KP_MEMSUBTRACT"
prop "const int SDLK_KP_MEMMULTIPLY"
prop "const int SDLK_KP_MEMDIVIDE"
prop "const int SDLK_KP_PLUSMINUS"
prop "const int SDLK_KP_CLEAR"
prop "const int SDLK_KP_CLEARENTRY"
prop "const int SDLK_KP_BINARY"
prop "const int SDLK_KP_OCTAL"
prop "const int SDLK_KP_DECIMAL"
prop "const int SDLK_KP_HEXADECIMAL"
prop "const int SDLK_LCTRL"
prop "const int SDLK_LSHIFT"
prop "const int SDLK_LALT"
prop "const int SDLK_LGUI"
prop "const int SDLK_RCTRL"
prop "const int SDLK_RSHIFT"
prop "const int SDLK_RALT"
prop "const int SDLK_RGUI"
prop "const int SDLK_MODE"
prop "const int SDLK_AUDIONEXT"
prop "const int SDLK_AUDIOPREV"
prop "const int SDLK_AUDIOSTOP"
prop "const int SDLK_AUDIOPLAY"
prop "const int SDLK_AUDIOMUTE"
prop "const int SDLK_MEDIASELECT"
prop "const int SDLK_WWW"
prop "const int SDLK_MAIL"
prop "const int SDLK_CALCULATOR"
prop "const int SDLK_COMPUTER"
prop "const int SDLK_AC_SEARCH"
prop "const int SDLK_AC_HOME"
prop "const int SDLK_AC_BACK"
prop "const int SDLK_AC_FORWARD"
prop "const int SDLK_AC_STOP"
prop "const int SDLK_AC_REFRESH"
prop "const int SDLK_AC_BOOKMARKS"
prop "const int SDLK_BRIGHTNESSDOWN"
prop "const int SDLK_BRIGHTNESSUP"
prop "const int SDLK_DISPLAYSWITCH"
prop "const int SDLK_KBDILLUMTOGGLE"
prop "const int SDLK_KBDILLUMDOWN"
prop "const int SDLK_KBDILLUMUP"
prop "const int SDLK_EJECT"
prop "const int SDLK_SLEEP"
prop "const int MESSAGEBOX_ERROR"
prop "const int MESSAGEBOX_WARN"
prop "const int MESSAGEBOX_INFO"
prop "const int CDECL"
prop "const int STD_CALL"
prop "const bool SCRIPT_COMPILED"

// String factory
strfactory "string"

// Default array type
defarray "array<T>"
